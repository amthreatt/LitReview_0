
@misc{gupta_vs_2019,
	title = {{VS} {Code} {Extensions} {For} {Web} {Dev} {Productivity}},
	url = {https://betterprogramming.pub/vs-code-extension-for-web-dev-productivity-fa541654161f},
	abstract = {Make your experience in the editor colorful, streamlined, and powerful},
	language = {en},
	urldate = {2022-04-27},
	journal = {Medium},
	author = {Gupta, Deepak},
	month = dec,
	year = {2019},
}

@misc{web_dev_simplified_build_2019,
	title = {Build {A} {Calculator} {With} {JavaScript} {Tutorial}},
	url = {https://www.youtube.com/watch?v=j59qQ7YWLxw},
	abstract = {Projects are the best way to learn JavaScript, and a calculator is one of the best projects to choose. A calculator covers all the complex interactions with UI and JavaScript while still being simple enough for people of any skill level.

In this video I will walk you through the steps it takes to build a completely modern calculator using JavaScript best practices. If you want to learn JavaScript or improve your JavaScript skill this is a must do project.

ðŸ“š Materials:

Code: https://github.com/WebDevSimplified/V...

ðŸ§  Concepts Covered:
 
- How to use ES6 classes to organize code
- How to sync JavaScript code with a UI
- CSS Grid
- Flexbox
- The best way to cleanly handle user input
- How to debug complicated edge cases

ðŸŒŽ Find Me Here:

Twitter: https://twitter.com/DevSimplified
GitHub: https://github.com/WebDevSimplified
CodePen: https://codepen.io/WebDevSimplified


\#JavaScript \#WebDevelopment \#Programming},
	urldate = {2022-04-27},
	author = {{Web Dev Simplified}},
	month = apr,
	year = {2019},
}

@misc{basu_numerical_nodate,
	address = {Occidental College},
	type = {Class},
	title = {Numerical {Analysis} {MATH370}},
	author = {Basu, Treena},
}

@book{mathews_numerical_nodate,
	edition = {Fourth},
	title = {Numerical methods using {MATLAB}},
	isbn = {0-13-065248-2},
	author = {Mathews, John and Fink, Kurtis},
}

@misc{noauthor_newtons_2022,
	title = {Newton's method},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Newton%27s_method&oldid=1080657265},
	abstract = {In numerical analysis, Newton's method, also known as the Newtonâ€“Raphson method, named after Isaac Newton and Joseph Raphson, is a root-finding algorithm which produces successively better approximations to the roots (or zeroes) of a real-valued function. The most basic version starts with a single-variable function f defined for a real variable x, the function's derivative fâ€², and an initial guess x0 for a root of f. If the function satisfies sufficient assumptions and the initial guess is close, then

  
    
      
        
          x
          
            1
          
        
        =
        
          x
          
            0
          
        
        âˆ’
        
          
            
              f
              (
              
                x
                
                  0
                
              
              )
            
            
              
                f
                â€²
              
              (
              
                x
                
                  0
                
              
              )
            
          
        
      
    
    \{{\textbackslash}displaystyle x\_\{1\}=x\_\{0\}-\{{\textbackslash}frac \{f(x\_\{0\})\}\{f'(x\_\{0\})\}\}\}
  is a better approximation of the root than x0. Geometrically, (x1, 0) is the intersection of the x-axis and the tangent of the graph of f at (x0, f(x0)): that is, the improved guess is the unique root of the linear approximation at the initial point. The process is repeated as

  
    
      
        
          x
          
            n
            +
            1
          
        
        =
        
          x
          
            n
          
        
        âˆ’
        
          
            
              f
              (
              
                x
                
                  n
                
              
              )
            
            
              
                f
                â€²
              
              (
              
                x
                
                  n
                
              
              )
            
          
        
      
    
    \{{\textbackslash}displaystyle x\_\{n+1\}=x\_\{n\}-\{{\textbackslash}frac \{f(x\_\{n\})\}\{f'(x\_\{n\})\}\}\}
  until a sufficiently precise value is reached. This algorithm is first in the class of Householder's methods, succeeded by Halley's method. The method can also be extended to complex functions and to systems of equations.},
	language = {en},
	urldate = {2022-04-19},
	journal = {Wikipedia},
	month = apr,
	year = {2022},
	note = {Page Version ID: 1080657265},
}

@misc{noauthor_joseph_2022,
	title = {Joseph {Raphson}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Joseph_Raphson&oldid=1077028147},
	abstract = {Joseph Raphson (c. 1668 â€“ c. 1715) was an English mathematician and intellectual known best for the Newtonâ€“Raphson method.},
	language = {en},
	urldate = {2022-04-19},
	journal = {Wikipedia},
	month = mar,
	year = {2022},
	note = {Page Version ID: 1077028147},
}

@misc{noauthor_newton_nodate,
	title = {Newton {Raphson} {Method} {\textbar} {Brilliant} {Math} \& {Science} {Wiki}},
	url = {https://brilliant.org/wiki/newton-raphson-method/},
	abstract = {The Newton-Raphson method (also known as Newton\&\#39;s method) is a way to quickly find a good approximation for the root of a real-valued function ...},
	language = {en-us},
	urldate = {2022-04-19},
}

@article{pane_effectiveness_2014,
	title = {Effectiveness of {Cognitive} {Tutor} {Algebra} {I} at {Scale}},
	volume = {36},
	url = {https://www.jstor.org/stable/43773458},
	number = {2},
	journal = {American Educational Research Association},
	author = {Pane, John and Griffin, Ann and McCaffrey, Daniel and Karam, Rita},
	month = jun,
	year = {2014},
	pages = {19},
}

@misc{irwin_nces_nodate,
	title = {{NCES} {Blog} {\textbar} {Students}â€™ {Internet} {Access} {Before} and {During} the {Coronavirus} {Pandemic} by {Household} {Socioeconomic} {Status}},
	url = {https://nces.ed.gov/blogs/nces/post/students-internet-access-before-and-during-the-coronavirus-pandemic-by-household-socioeconomic-status},
	urldate = {2022-04-18},
	author = {Irwin, VÃ©ronique},
}

@misc{hemphill_nces_nodate,
	title = {{NCES} {Blog} {\textbar} {Students}â€™ {Access} to the {Internet} and {Digital} {Devices} at {Home}},
	url = {https://nces.ed.gov/blogs/nces/post/students-access-to-the-internet-and-digital-devices-at-home},
	urldate = {2022-04-18},
	author = {Hemphill, Cadelle and Wang, Yan and Scott, Chad and Wilburn, Grady},
}

@misc{scott_ethical_nodate,
	title = {Ethical {Web} {Development}},
	url = {https://www.ethicalweb.org/},
	urldate = {2022-04-18},
	author = {Scott, Adam},
}

@misc{coyle_final_nodate,
	title = {Final {Project}: {Speech} {Recognition}: {Affordances} and {Limitations} with {Accented} {Speech} {\textbar} {CCTP} 711 â€“ {Semiotics} and {Cognitive} {Technology}},
	shorttitle = {Final {Project}},
	url = {https://blogs.commons.georgetown.edu/cctp-711-fall2018/2018/12/11/speech-recognition-affordances-and-limitations-with-accented-speech/},
	language = {en-US},
	urldate = {2022-04-18},
	author = {Coyle, Adrienne},
}

@misc{noauthor_shunting-yard_2022,
	title = {Shunting-yard algorithm},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Shunting-yard_algorithm&oldid=1074583221},
	abstract = {In computer science, the shunting-yard algorithm is a method for parsing arithmetical or logical expressions, or a combination of both, specified in infix notation. It can produce either a postfix notation string, also known as Reverse Polish notation (RPN), or an abstract syntax tree (AST). The algorithm was invented by Edsger Dijkstra and named the "shunting yard" algorithm because its operation resembles that of a railroad shunting yard. Dijkstra first described the Shunting Yard Algorithm in the Mathematisch Centrum report MR 34/61.
Like the evaluation of RPN, the shunting yard algorithm is stack-based. Infix expressions are the form of mathematical notation most people are used to, for instance "3 + 4" or "3 + 4 Ã— (2 âˆ’ 1)". For the conversion there are two text variables (strings), the input and the output. There is also a stack that holds operators not yet added to the output queue. To convert, the program reads each symbol in order and does something based on that symbol. The result for the above examples would be (in Reverse Polish notation) "3 4 +" and "3 4 2 1 âˆ’ Ã— +", respectively.
The shunting yard algorithm will correctly parse all valid infix expressions, but does not reject all invalid expressions. For example, "1 2 +" is not a valid infix expression, but would be parsed as "1 + 2". The algorithm can however reject expressions with mismatched parentheses.
The shunting-yard algorithm was later generalized into operator-precedence parsing.},
	language = {en},
	urldate = {2022-03-09},
	journal = {Wikipedia},
	month = mar,
	year = {2022},
	note = {Page Version ID: 1074583221},
}

@misc{noauthor_integral_nodate,
	title = {Integral {Calculator} â€¢ {With} {Steps}!},
	url = {https://www.integral-calculator.com/},
	urldate = {2022-03-09},
}

@article{kochmar_automated_2021,
	title = {Automated {Data}-{Driven} {Generation} of {Personalized} {Pedagogical} {Interventions} in {Intelligent} {Tutoring} {Systems}},
	issn = {1560-4306},
	url = {https://doi.org/10.1007/s40593-021-00267-x},
	doi = {10.1007/s40593-021-00267-x},
	abstract = {Intelligent tutoring systems (ITS) have been shown to be highly effective at promoting learning as compared to other computer-based instructional approaches. However, many ITS rely heavily on expert design and hand-crafted rules. This makes them difficult to build and transfer across domains and limits their potential efficacy. In this paper, we investigate how feedback in a large-scale ITS can be automatically generated in a data-driven way, and more specifically how personalization of feedback can lead to improvements in student performance outcomes. First, in this paper we propose a machine learning approach to generate personalized feedback in an automated way, which takes individual needs of students into account, while alleviating the need of expert intervention and design of hand-crafted rules. We leverage state-of-the-art machine learning and natural language processing techniques to provide students with personalized feedback using hints and Wikipedia-based explanations. Second, we demonstrate that personalized feedback leads to improved success rates at solving exercises in practice: our personalized feedback model is used in Korbit, a large-scale dialogue-based ITS with around 20,000 students launched in 2019. We present the results of experiments with students and show that the automated, data-driven, personalized feedback leads to a significant overall improvement of 22.95\% in student performance outcomes and substantial improvements in the subjective evaluation of the feedback.},
	language = {en},
	urldate = {2022-03-09},
	journal = {International Journal of Artificial Intelligence in Education},
	author = {Kochmar, Ekaterina and Vu, Dung Do and Belfer, Robert and Gupta, Varun and Serban, Iulian Vlad and Pineau, Joelle},
	month = jul,
	year = {2021},
}

@misc{ahearn_what_2016,
	title = {What is the {Orton}-{Gillingham} {Approach}? {\textbar} {Academy} of {Orton}-{Gillingham} {Practitioners} and {Educators}},
	shorttitle = {What is the {Orton}-{Gillingham} {Approach}?},
	url = {https://www.ortonacademy.org/resources/what-is-the-orton-gillingham-approach/},
	abstract = {Orton-Gillingham is an instructional approach intended primarily for use with individuals who have difficulty with reading, spelling, and writing of the sort associated with dyslexia.},
	language = {en-US},
	urldate = {2022-03-05},
	author = {Ahearn, Molly},
	month = dec,
	year = {2016},
}

@misc{noauthor_evidence-based_nodate,
	title = {Evidence-based math instruction: {What} you need to know},
	shorttitle = {Evidence-based math instruction},
	url = {https://www.understood.org/articles/en/evidence-based-math-instruction-for-struggling-students},
	abstract = {Learn the most effective ways to teach math to students who struggle. Understand the four types of evidence-based math instruction.},
	language = {en},
	urldate = {2022-03-05},
}

@misc{noauthor_is_nodate,
	title = {Is there such a thing as {Orton}â€“{Gillingham} for math?},
	url = {https://www.understood.org/articles/en/is-there-such-a-thing-as-orton-gillingham-for-math},
	abstract = {What is Ortonâ€“Gillingham for math? Is it a real thing? Learn about multisensory math instruction and how it can help kids who struggle with math.},
	language = {en},
	urldate = {2022-03-05},
}

@misc{noauthor_why_nodate,
	title = {Why do some kids find math hard?},
	url = {https://www.readandspell.com/us/struggling-with-math},
	abstract = {Learn more about students who are struggling with math because of dyscalculia, dyslexia, ADD/ADHD, dyspraxia, and/or visual processing difficulties.},
	language = {en-US},
	urldate = {2022-03-05},
	journal = {Touch-type Read and Spell (TTRS)},
}

@misc{fensterwald_10_nodate,
	title = {10 {California} districts struggle, and find some success, as they shift to {Common} {Core} math},
	url = {https://edsource.org/2019/10-california-districts-struggle-and-find-some-success-as-they-shift-to-common-core-math/615109},
	abstract = {Studies of the Math in Common project offer lessons for other districts and a warning: Steady progress takes a long-term commitment.},
	language = {en},
	urldate = {2022-03-05},
	journal = {EdSource},
	author = {Fensterwald, John},
}

@misc{noauthor_california_nodate,
	title = {California {Assessment} of {Student} {Performance} and {Progress} ({CAASPP})},
	url = {https://www.sjcoe.org/commoncore/CAASPP.aspx},
	urldate = {2022-03-05},
}

@misc{noauthor_packages_nodate,
	title = {packages - {Making} a website with {Mathematica}},
	url = {https://mathematica.stackexchange.com/questions/152663/making-a-website-with-mathematica},
	abstract = {This is the blog post that tells how wolfram came to be using Mathematica as their computation device},
	urldate = {2022-02-23},
	journal = {Mathematica Stack Exchange},
}

@misc{noauthor_202021_nodate,
	title = {2020â€“21 {Smarter} {Balanced} {ELA} and {Mathematics} {Detailed} {Test} {Results} â€“ {CAASPP} {Reporting} ({CA} {Dept} of {Education})},
	url = {https://caaspp-elpac.cde.ca.gov/caaspp/ViewReportSB?ps=true&lstTestYear=2021&lstTestType=B&lstGroup=1&lstGrade=13&lstSchoolType=A&lstCounty=00&lstDistrict=00000&lstSchool=0000000&lstSubject=m},
	abstract = {20-21 Math State testing results},
	urldate = {2022-02-23},
}

@misc{noauthor_secret_nodate,
	title = {The {Secret} behind the {Computational} {Engine} in {Wolfram}{\textbar}{Alpha}â€”{Wolfram}{\textbar}{Alpha} {Blog}},
	url = {https://blog.wolframalpha.com/2009/05/01/the-secret-behind-the-computational-engine-in-wolframalpha/},
	abstract = {This is the blog post that shows how wolfram came to be, they used mathematica},
	urldate = {2022-02-23},
}
